class Solution {
    int max=Integer.MIN_VALUE;
    public int[] solve(TreeNode root){
        if(root==null)
        return new int[]{Integer.MAX_VALUE,Integer.MIN_VALUE,0};

        int[] left=solve(root.left);
        int[] right=solve(root.right);
        
        if(left[1]>=root.val || right[0]<=root.val){
            return new int[]{Integer.MIN_VALUE,Integer.MAX_VALUE,0};
        }

        int sum=left[2]+root.val+right[2];
        max=Math.max(max,sum);
        return new int[]{Math.min(root.val,left[0]),Math.max(root.val,right[1]),sum};
    }
    public int maxSumBST(TreeNode root) {
        solve(root);
        return max<0 ? 0: max;
    }
}
